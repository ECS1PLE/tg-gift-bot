const { saveUsers } = require("./balance");

/**
 * @param {Object} ctx
 * @param {Object} users
 */
function giveStarsToUser(ctx, users) {
  if (ctx.from.id !== process.env.ADMIN_ID) {
    return ctx.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
  }

  const [_, userId, stars] = ctx.message.text.split(" ");

  if (!userId || !stars) {
    return ctx.reply(
      "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /agive <ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥>"
    );
  }

  const starsToGive = parseInt(stars, 10);

  if (isNaN(starsToGive) || starsToGive <= 0) {
    return ctx.reply("‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.");
  }

  const user = users[userId];
  if (!user) {
    return ctx.reply("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.");
  }

  user.stars += starsToGive;

  saveUsers(users);

  ctx.reply(`‚úÖ –í—ã–¥–∞–Ω–æ ${starsToGive} –∑–≤–µ–∑–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}.`);
  ctx.telegram.sendMessage(
    userId,
    `üí∞ –í–∞–º –≤—ã–¥–∞–Ω–æ ${starsToGive} –∑–≤–µ–∑–¥ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.`
  );
}

module.exports = { giveStarsToUser };
